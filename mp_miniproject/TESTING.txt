# Mini Project README and Testing

In this project, I have finished the first three steps and the redirection of
the fourth step. If there is some special format, I will mention them in each
part below.

I have provide you a customized "myecho" program for testing in the directory.
It has the following functions:
(1) print the arguments you passed in when run it
(2) After you run it, it can read an string(len < 100) and print it in stdout.
(3) You will see that it can print a line that should in stderr.

## Step 1 Testing

(1) Exit test with "exit" command".

Run "./myShell", then input "exit".

Explanation: You will see that it exit which is as expected since we meet a
"exit" command.

(2) Exit test with EOF.

Run "./myShell", then use C-d.

Explanation: You will see that it exit which is as expected since we passed an
"EOF" signal.

(3) Run command with absolute path with no arguments.

Run "./myShell", then input "/bin/ls".

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $/bin/ls
 command.cpp   command.o	  Makefile   myecho.c   myShell.cpp   numerics.txt   parser.cpp   parser.o   shell.cpp	 shell.o   '#TESTING.txt#'   tmp
 command.h     commandShell.txt   myecho     myShell    myShell.o     out	     parser.h	  README     shell.h	 step.txt   TESTING.txt
Program exited with status 0
```
    
Explanation: This is the list of files in current directory, which is exactly
you call built-in linux "ls" command. Here is a example of absolute path.

(4) Run command with relative path and no arguments.

Run "./myShell", then input "./myecho", then input "abc".

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $./myecho
[stdout]hi there, this is a helper progam
[stdout]argv[0]: ./myecho
[stdout] Please enter something:abc
[stdout]What you just input is: abc
[stderr]This should be print to stderr stream
Program exited with status 0
```

Explanation: The string "abc" in the fourth line is our input. This is correct
since it output the same as you run "./myecho" in bash shell. Here is an example
of relative path.

(5) Run command with a non-0 exit.

Run "./myShell", then input "/bin/ls -12768"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $/bin/ls -12768
/bin/ls: invalid option -- '2'
Try '/bin/ls --help' for more information.
Program exited with status 2
```

Explanation: Since "12768" is not a valid options, so program exits with "2"
rather than 0.

(6) todo: kill example


## Step 2 Testing

(1) System environment variable test.

Run "./myShell", then input "echo $PATH"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $echo $PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
Program exited with status 0
```

Explanation: I initilize all the enrionment variables at the beginning of
running, $PATH is only one of them. The value of them is exactly the same as
in 'environ' variable declared in system.

(2) ECE551PATH variable test 1

Run "./myShell", then input "echo $ECE551PATH"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $echo $ECE551PATH
/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
Program exited with status 0
```

Explanation: ECE551PATH is initilized with value of PATH and would be exported
at the beginning of shell.

(3) ECE551PATH variable test 2

Run "./myShell", then input "env"

The output would be:
``` 
myShell:/home/ym129/ece551/mp_miniproject $env
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SSH_CONNECTION=24.163.77.18 53817 152.3.77.223 22
LESSCLOSE=/usr/bin/lesspipe %s %s
LANG=en_US.UTF-8
EDITOR=emacs -nw
S_COLORS=auto
XDG_SESSION_ID=83657
USER=ym129
PWD=/home/ym129/ece551/mp_miniproject
HOME=/home/ym129
LC_CTYPE=en_US.UTF-8
SSH_CLIENT=24.163.77.18 53817 22
SSH_TTY=/dev/pts/139
MAIL=/var/mail/ym129
VISUAL=emacs -nw
TERM=xterm-256color
SHELL=/bin/bash
SHLVL=1
LOGNAME=ym129
XDG_RUNTIME_DIR=/run/user/1294
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
LESSOPEN=| /usr/bin/lesspipe %s
_=./myShell
OLDPWD=/home/ym129/ece551
ECE551PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
Program exited with status 0
```

Explanation: Please note the last item of output, when we start the shell, the
$ECE551PATH is exported, so we can see it from 'env' command.

(4) Empty command test.

Run "./myShell", then press enter

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $
[myShell KNOWN Issue]You entered an empty command.
```

Explanation: This is correct, since myShell receive nothing, so it run no
command but return an information.

(5) Non-exist command test.

Run "./myShell", then input "xxx"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $xxx
Command xxx not found
```

Explanation: Since command "xxx" does not exist in any path of $ECE551PATH, it
can not be processed.

(6) Run command in $ECE551PATH

Run "./myShell", then input "ls"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $ls
 a.out	       command.h   commandShell.txt     Makefile   myecho.c   myShell.cpp   numerics.txt   parser.cpp   parser.o   shell.cpp   shell.o	 '#TESTING.txt#'   tmp
 command.cpp   command.o   kill_example_src.c   myecho	   myShell    myShell.o     out		   parser.h     README	   shell.h     step.txt   TESTING.txt
Program exited with status 0
```

Explanation: myShell searches $ECE551PATH for command, and found it in one of
the path, then "ls" was ran.

(7) Run command with multiple arguments

Run "./myShell", then input "ls -l -a"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $ls -l -a
total 2484
drwxrwxr-x   3 ym129 ym129   4096 Dec  4 22:34  .
drwxr-xr-x 110 ym129 ym129   4096 Nov 15 13:23  ..
-rw-rw-r--   1 ym129 ym129   4148 Dec  4 21:54  command.cpp
-rw-rw-r--   1 ym129 ym129   2069 Dec  4 13:52  command.h
-rw-rw-r--   1 ym129 ym129 502848 Dec  4 22:32  command.o
-rw-rw-r--   1 ym129 ym129   7055 Nov 12 12:53  commandShell.txt
drwxrwxr-x   2 ym129 ym129     64 Nov 11 18:36  .honor
-rw-rw-r--   1 ym129 ym129    383 Dec  4 22:32  Makefile
-rwxrwxr-x   1 ym129 ym129   8520 Dec  4 19:32  myecho
-rw-rw-r--   1 ym129 ym129    471 Dec  4 19:32  myecho.c
-rwxrwxr-x   1 ym129 ym129 523648 Dec  4 22:32  myShell
-rw-rw-r--   1 ym129 ym129    154 Dec  3 21:47  myShell.cpp
-rw-rw-r--   1 ym129 ym129 316408 Dec  4 22:32  myShell.o
-rw-rw-r--   1 ym129 ym129   8881 Nov 12 12:53  numerics.txt
-rw-r--r--   1 ym129 ym129   5840 Dec  4 14:06  parser.cpp
-rw-r--r--   1 ym129 ym129   1148 Dec  4 10:57  parser.h
-rw-rw-r--   1 ym129 ym129 587328 Dec  4 22:32  parser.o
-rw-rw-r--   1 ym129 ym129   2475 Nov 12 12:53  README
-rw-rw-r--   1 ym129 ym129   1520 Dec  4 22:04  shell.cpp
-rw-rw-r--   1 ym129 ym129   1326 Dec  4 21:38  shell.h
-rw-rw-r--   1 ym129 ym129 494512 Dec  4 22:32  shell.o
-rw-rw-r--   1 ym129 ym129   1645 Nov 30 02:46  step.txt
lrwxrwxrwx   1 ym129 ym129     42 Dec  4 22:34  .#TESTING.txt -> ym129@vcm-181.vm.duke.edu.64191:1537993709
-rw-rw-r--   1 ym129 ym129   7241 Dec  4 22:34 '#TESTING.txt#'
-rw-rw-r--   1 ym129 ym129   7237 Dec  4 22:16  TESTING.txt
Program exited with status 0
```

Explanation: This is the same as the bash shell running "ls -l -a"

(8) Recognizing leading blanks, seperating blanks, and tailing blanks

Run "./myShell", then input "        ls   -l   -a"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $ls -l -a
total 2484
drwxrwxr-x   3 ym129 ym129   4096 Dec  4 22:34  .
drwxr-xr-x 110 ym129 ym129   4096 Nov 15 13:23  ..
-rw-rw-r--   1 ym129 ym129   4148 Dec  4 21:54  command.cpp
-rw-rw-r--   1 ym129 ym129   2069 Dec  4 13:52  command.h
-rw-rw-r--   1 ym129 ym129 502848 Dec  4 22:32  command.o
-rw-rw-r--   1 ym129 ym129   7055 Nov 12 12:53  commandShell.txt
drwxrwxr-x   2 ym129 ym129     64 Nov 11 18:36  .honor
-rw-rw-r--   1 ym129 ym129    383 Dec  4 22:32  Makefile
-rwxrwxr-x   1 ym129 ym129   8520 Dec  4 19:32  myecho
-rw-rw-r--   1 ym129 ym129    471 Dec  4 19:32  myecho.c
-rwxrwxr-x   1 ym129 ym129 523648 Dec  4 22:32  myShell
-rw-rw-r--   1 ym129 ym129    154 Dec  3 21:47  myShell.cpp
-rw-rw-r--   1 ym129 ym129 316408 Dec  4 22:32  myShell.o
-rw-rw-r--   1 ym129 ym129   8881 Nov 12 12:53  numerics.txt
-rw-r--r--   1 ym129 ym129   5840 Dec  4 14:06  parser.cpp
-rw-r--r--   1 ym129 ym129   1148 Dec  4 10:57  parser.h
-rw-rw-r--   1 ym129 ym129 587328 Dec  4 22:32  parser.o
-rw-rw-r--   1 ym129 ym129   2475 Nov 12 12:53  README
-rw-rw-r--   1 ym129 ym129   1520 Dec  4 22:04  shell.cpp
-rw-rw-r--   1 ym129 ym129   1326 Dec  4 21:38  shell.h
-rw-rw-r--   1 ym129 ym129 494512 Dec  4 22:32  shell.o
-rw-rw-r--   1 ym129 ym129   1645 Nov 30 02:46  step.txt
lrwxrwxrwx   1 ym129 ym129     42 Dec  4 22:34  .#TESTING.txt -> ym129@vcm-181.vm.duke.edu.64191:1537993709
-rw-rw-r--   1 ym129 ym129   7241 Dec  4 22:34 '#TESTING.txt#'
-rw-rw-r--   1 ym129 ym129   7237 Dec  4 22:16  TESTING.txt
Program exited with status 0
```

Explanation: This is the same as the bash shell running "ls -l -a". In myShell,
I treat all non-escaped blank as seperating blank, the leading blanks and
tailing blanks do not count. There is an exception for 'set' command, we will
test this later.

(9) Escaped blank.

Run "./myShell", then input "./myecho This\ is\ an\ escaped\ line. This\ is\ another\ escaped\ line.",
then input "trivial_input."

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $./myecho \ This\ is\ an\ escaped\ line.\ \\  \ This\ is\ another\ escaped\\\ line.
[stdout]hi there, this is a helper progam
[stdout]argv[0]: ./myecho
[stdout]argv[1]:  This is an escaped line. \
[stdout]argv[2]:  This is another escaped\\ line.
[stdout] Please enter something:trivial_input
[stdout]What you just input is: trivial_input
[stderr]This should be print to stderr stream
Program exited with status 0
```

Explanation: In this test, we pass two arguments when we run it, which are
"\ This\ is\ an\ escaped\ line.\ \\" and "\ This\ is\ another\ escaped\\\ line.".
It should be regarded as " This is an escaped line. \" and
" This is another escaped\\ line." , which are exactly the third and the
fourth line in output. Please note that I intentionally added some backslashes,
and leading blank to demonstrate myShell's ability to parse arguments correctly.

## Step 3 Test

Note: for cd/set/export/inc commands, I would not prompt "Program exited with
status 0".

(1) Change to legal relative directory.
Run "./myShell", then input "cd .."

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $cd ..
myShell:/home/ym129/ece551 $
```

Explanation: Current work directory is "/home/ym129/ece551/mp_miniproject",
when we change to its parent directory, it would be "/home/ym129/ece551",
the new work directory is correct.


(2) Change to root directory(~)
Run "./myShell", then input "cd ~"

The output would be:
```
myShell:/home/ym129/ece551 $cd ~
myShell:/home/ym129 $
```

Explanation: No matter where we are now, when we change to root directory,
it always lead us to the directory that declaed in environment variable
$HOME. This is correct, since for my login account, the root directory is
'/home/ym129'.


(3) Change to absolute directory.
Run "./myShell", then input "cd /home/ym129/ece551/mp_miniproject"

The output would be:
```
myShell:/home/ym129 $cd /home/ym129/ece551/mp_miniproject
myShell:/home/ym129/ece551/mp_miniproject $
```

Explanation: We can change to an absolute directory directly.

(4) Change to illegal directory.
Run "./myShell", then input "cd xxx"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $cd xxx
Can not change directory: No such file or directory
```

Explanation: Since directory "xxx" does not exist, library function takes
care of it.

(5) Access variables with combination and fake variable.

Run "./myShell", then input "echo $USER-is-using-$TERM", then input
"echo I-can-not-find-$IT."

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $echo $USER-is-using-$TERM
ym129-is-using-xterm-256color
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $echo I-can-not-find-$IT.
I-can-not-find-.
Program exited with status 0
```

Explanation: myShell would parse the string, replace all dollar-sign
leading variables with its value, if we cannot find it, it would be
replaced with an empty string(i.e. $IT is replaced with nothing.)

(6) Set a variable and export it.

Run "./myShell", then input "set a 123", then input "echo $a", then
input "env", then export, then 'env'

The output would be:
```myShell:/home/ym129/ece551/mp_miniproject $set a 123
myShell:/home/ym129/ece551/mp_miniproject $env
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SSH_CONNECTION=24.163.77.18 53937 152.3.77.223 22
LESSCLOSE=/usr/bin/lesspipe %s %s
LANG=en_US.UTF-8
EDITOR=emacs -nw
S_COLORS=auto
XDG_SESSION_ID=83713
USER=ym129
PWD=/home/ym129/ece551/mp_miniproject
HOME=/home/ym129
LC_CTYPE=en_US.UTF-8
SSH_CLIENT=24.163.77.18 53937 22
SSH_TTY=/dev/pts/133
MAIL=/var/mail/ym129
VISUAL=emacs -nw
TERM=xterm-256color
SHELL=/bin/bash
SHLVL=1
LOGNAME=ym129
XDG_RUNTIME_DIR=/run/user/1294
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
LESSOPEN=| /usr/bin/lesspipe %s
OLDPWD=/home/ym129
_=./myShell
ECE551PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $echo $a
123
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $export a
myShell:/home/ym129/ece551/mp_miniproject $env
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SSH_CONNECTION=24.163.77.18 53937 152.3.77.223 22
LESSCLOSE=/usr/bin/lesspipe %s %s
LANG=en_US.UTF-8
EDITOR=emacs -nw
S_COLORS=auto
XDG_SESSION_ID=83713
USER=ym129
PWD=/home/ym129/ece551/mp_miniproject
HOME=/home/ym129
LC_CTYPE=en_US.UTF-8
SSH_CLIENT=24.163.77.18 53937 22
SSH_TTY=/dev/pts/133
MAIL=/var/mail/ym129
VISUAL=emacs -nw
TERM=xterm-256color
SHELL=/bin/bash
SHLVL=1
LOGNAME=ym129
XDG_RUNTIME_DIR=/run/user/1294
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
LESSOPEN=| /usr/bin/lesspipe %s
OLDPWD=/home/ym129
_=./myShell
ECE551PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
a=123
Program exited with status 0
```

Explanation: In this case, we first set "a" to "123", it would replace all "$a",
then we run "echo $a", it should output "123" which is what we just set. Right
now, if we run 'env', "a=123" would not be there. However, when we run 'export'
then 'env', it shows up, which means it is added to environment variables, and
applied to all programs.

(7) Update ECE551PATH environment variable with 'set' and 'export'

Run "./myShell",
then input "set ECE551PATH $ECE551PATH:/home/ym129/ece551/mp_miniproject",
then input "export ECE551PATH",
then input "env",
then input "myecho", and input "trivial_input" for "myecho".

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set ECE551PATH $ECE551PATH:/home/ym129/ece551/mp_miniproject
myShell:/home/ym129/ece551/mp_miniproject $export ECE551PATH
myShell:/home/ym129/ece551/mp_miniproject $env
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SSH_CONNECTION=24.163.77.18 53937 152.3.77.223 22
LESSCLOSE=/usr/bin/lesspipe %s %s
LANG=en_US.UTF-8
EDITOR=emacs -nw
S_COLORS=auto
XDG_SESSION_ID=83713
USER=ym129
PWD=/home/ym129/ece551/mp_miniproject
HOME=/home/ym129
LC_CTYPE=en_US.UTF-8
SSH_CLIENT=24.163.77.18 53937 22
SSH_TTY=/dev/pts/133
MAIL=/var/mail/ym129
VISUAL=emacs -nw
TERM=xterm-256color
SHELL=/bin/bash
SHLVL=1
LOGNAME=ym129
XDG_RUNTIME_DIR=/run/user/1294
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
LESSOPEN=| /usr/bin/lesspipe %s
OLDPWD=/home/ym129
_=./myShell
ECE551PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/ym129/ece551/mp_miniproject
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $myecho
[stdout]hi there, this is a helper progam
[stdout]argv[0]: /home/ym129/ece551/mp_miniproject/myecho
[stdout] Please enter something:trivial_input
[stdout]What you just input is: trivial_input
[stderr]This should be print to stderr stream
Program exited with status 0
```

Explanation: This case demonstrate an way to modify the searched path, we can
add any path to current ECE551PATH. Before we export $ECE551PATH, it ends with
"/usr/games:/usr/local/games". After exported, it ends with what we just set.
Now, myShell also searches "/home/ym129/ece551/mp_miniproject" for executable.
In this case I am also showing that we can simply use "myecho" rather than
"./myecho".


(8) 'Set' command invalid argument handling

Run "./myShell",
then input "set a   ".
then input "set a-b xyz"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set a
[myShell KNOWN Issue]The arguments seems bad, please follow 'set var value' format
myShell:/home/ym129/ece551/mp_miniproject $set a-b xyz
[myShell KNOWN Issue]The var can only contains letter/number/underscore
```

Explanation: The 'set' command takes two arguments, if we only give myShell one
argument, it can not further proceed. The first argument var starts from the
first non-blank character after 'set', and ends until it meet a char which is
not letter/number/underscore, because this is the naming requirement of the
variable.


(9) 'Set' command with space-seperated value, 

Run "./myShell",
then input "set   a   current\ user is $USER".

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set   a   current\ user is $USER
myShell:/home/ym129/ece551/mp_miniproject $echo $a
current\ user is ym129
Program exited with status 0
```

Explanation: In myShell, the arguments was divide into two parts. The first
argument var starts from the first non-blank character after 'set', and ends
until it meet a char which is not letter/number/underscore, because this is
the naming requirement of the variable. The second argument value starts
at the first non-space character after the first argument var. For it, we
treat all escaped blank as a simple blank, and we do not distinguish seperating
blank from escaped blank. I parse both of them to a blank here.

(10) 'Export' command with argument number error handling

Run "./myShell",
then input "export a b c",
then input "export"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $export a b c
[myShell KNOWN Issue]You can only export one argument at a time
myShell:/home/ym129/ece551/mp_miniproject $export
[myShell KNOWN Issue]There should be at lease an argument to be exported
```

Explanation: In myShell, export is a implemented command that takes one
argument, which is the variable name that user want to export. If more than
two arguments are given or no argument are given, myShell would prompt the
error information.

(11) 'Export' command instance

Run "./myShell",
then input "set a b",
then input "export a",
then input "env"


The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set a b
myShell:/home/ym129/ece551/mp_miniproject $export a
myShell:/home/ym129/ece551/mp_miniproject $env
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
SSH_CONNECTION=24.163.77.18 56880 152.3.77.223 22
LESSCLOSE=/usr/bin/lesspipe %s %s
LANG=en_US.UTF-8
EDITOR=emacs -nw
S_COLORS=auto
XDG_SESSION_ID=84578
USER=ym129
PWD=/home/ym129/ece551/mp_miniproject
HOME=/home/ym129
LC_CTYPE=en_US.UTF-8
SSH_CLIENT=24.163.77.18 56880 22
SSH_TTY=/dev/pts/47
MAIL=/var/mail/ym129
VISUAL=emacs -nw
TERM=xterm-256color
SHELL=/bin/bash
SHLVL=1
LOGNAME=ym129
XDG_RUNTIME_DIR=/run/user/1294
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
LESSOPEN=| /usr/bin/lesspipe %s
OLDPWD=/home/ym129
_=./myShell
ECE551PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
a=b
Program exited with status 0
```

Explanation: From the second last line, you can see variable a applies to all programs.

(12) 'Inc' a non-exist variable

Run "./myShell",
then input "inc abc",
then input "echo $abc"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $inc abc
myShell:/home/ym129/ece551/mp_miniproject $echo $abc
1
Program exited with status 0
```

Explanation: Since variable $abc does not exist in myShell, so we regard it as 0,
after increasement, it turned out to be 1;

(13) 'Inc' a existed non-number variable

Run "./myShell",
then input "set a bc",
then input "echo $a",
then input "inc a",
then input "echo $a"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set a bc
myShell:/home/ym129/ece551/mp_miniproject $echo $a
bc
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $inc a
myShell:/home/ym129/ece551/mp_miniproject $echo $a
1
Program exited with status 0
```

Explanation: Initially we set $a with the value 'bc', then we increase it,
since it is a non-number value, we regard it as 0, and increase it to 1

(14) 'Inc' a existed positive variable

Run "./myShell",
then input "set a 123",
then input "inc a",
then input "echo $a"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set a 123
myShell:/home/ym129/ece551/mp_miniproject $inc a
myShell:/home/ym129/ece551/mp_miniproject $echo $a
124
Program exited with status 0
```

Explanation: Initially we set $a with the value "123", then we increase it,
since it is already a number, we add one to it.

(15) 'Inc' a existed negative variable

Run "./myShell",
then input "set a -100",
then input "inc a",
then input "echo $a",
then input "set a -1",
then input "inc a",
then input "echo $a"


The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set a -100
myShell:/home/ym129/ece551/mp_miniproject $inc a
myShell:/home/ym129/ece551/mp_miniproject $echo $a
-99
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $set a -1
myShell:/home/ym129/ece551/mp_miniproject $inc a
myShell:/home/ym129/ece551/mp_miniproject $echo $a
0
Program exited with status 0
```

Explanation: Increase a negative number, just like add one to a negative number.


(16) 'Inc' a '-'

Run "./myShell"
then input "set a -",
then input "inc a",
then input "echo $a"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $set a -
myShell:/home/ym129/ece551/mp_miniproject $inc a
myShell:/home/ym129/ece551/mp_miniproject $echo $a
1
Program exited with status 0
```

Explanation: This is a corner case, if we do not take care of this situation,
the number-reading progress will lead to some problem, here I simply regard it
as non-number situation.



## Step 4 Testing

For now, I only finished the stream redirection part.

Please note that I require (a)the format of redirection signs be separted by two
spaces, which means "cmd > file" is valid, while "cmd >file" is invalid. (b) the
input file should differ from output files, the output files that receive stream
from stdout and stderr can be the same.


(1) stdout redirection

Run "./myShell"
then input "echo 123 > input.txt",
then input "cat input.txt"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $echo 123 > input.txt
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $cat input.txt
123
Program exited with status 0
```

Explanation: Here we use 'echo' command to print something, but we redirect
the stream to a file, so input.txt would contain what should be printed in cli.


(2) stdin redirection

Run "./myShell"
then input "echo 123 > input.txt",
then input "./myecho < input.txt",
then input "cat input.txt"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $echo 123 > input.txt
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $./myecho < input.txt
[stdout]hi there, this is a helper progam
[stdout]argv[0]: ./myecho
[stdout] Please enter something:[stdout]What you just input is: 123
[stderr]This should be print to stderr stream
Program exited with status 0
```

Explanation: The first command is the same as previous test to let us have a
file containing the input. For "./myecho < input.txt" read the info in the file,
which should be entered by user from stdin stream. The third last line indicates
"123", which means myShell successfully pass the data from 'input.txt' to
'myecho'.

(3) stderr redirection

Run "./myShell"
then input "./myecho 2> stderr.txt",
then input "123" for 'myecho',
then input "cat input.txt"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $./myecho 2> stderr.txt
[stdout]hi there, this is a helper progam
[stdout]argv[0]: ./myecho
[stdout] Please enter something:123
[stdout]What you just input is: 123
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $cat stderr.txt
[stderr]This should be print to stderr stream
Program exited with status 0
```

Explanation: In this case, I redirect stderr to stderr.txt file. After running
'myecho', we can use command 'cat' to show the content of stderr.txt. Here we
see there is only one line '[stderr]This should be print to stderr stream' since
it belongs to stderr stream.

(4) Redirect stdout and stderr to the same file

Run "./myShell"
then input "./myecho 2> output.txt > output.txt",
then input "123" for 'myecho',
then input "cat output.txt"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $./myecho 2> output.txt > output.txt
123
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $cat output.txt
[stderr]This should be print to stderr stream
[stdout]hi there, this is a helper progam
[stdout]argv[0]: ./myecho
[stdout] Please enter something:[stdout]What you just input is: 123
Program exited with status 0
```

Explanation: Here we rediect stdout and stderr to the same file. This is correct
because both stdout output and stderr output shows in output.txt.


(5) Rediect stdin and stdout and stderr

Run "./myShell"
then input "echo 123 > input.txt",
then input "./myecho < input.txt > stdout.txt 2> stderr.txt",
then input "cat stdout.txt",
then input "cat stderr.txt"

The output would be:
```
myShell:/home/ym129/ece551/mp_miniproject $echo 123 > input.txt
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $./myecho < input.txt > stdout.txt 2> stderr.txt
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $cat stdout.txt
[stdout]hi there, this is a helper progam
[stdout]argv[0]: ./myecho
[stdout] Please enter something:[stdout]What you just input is: 123
Program exited with status 0
myShell:/home/ym129/ece551/mp_miniproject $cat stderr.txt
[stderr]This should be print to stderr stream
Program exited with status 0
```

Explanation: Here we do not enter anything from stdin, nor do we output anything
from stdout or stderr. We use input.txt as the input and stderr.txt and
stdout.txt as the output file. We see that stderr.txt contains line leading with
'[stderr]' tag, and stdout.txt contains lines leading with '[stdout]'.
